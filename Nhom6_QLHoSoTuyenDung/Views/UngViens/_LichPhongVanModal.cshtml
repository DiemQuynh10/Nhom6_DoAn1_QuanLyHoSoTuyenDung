@model Nhom6_QLHoSoTuyenDung.Models.UngVien
@using Microsoft.AspNetCore.Mvc.Rendering
@using Newtonsoft.Json

<div class="modal fade" id="modalTaoLich_@Model.MaUngVien" tabindex="-1" aria-labelledby="modalLabel_@Model.MaUngVien" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel_@Model.MaUngVien">
                    Lên lịch phỏng vấn cho <strong>@Model.HoTen</strong>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                @{
                    var lichMap = ViewBag.LichMap as Dictionary<string, Nhom6_QLHoSoTuyenDung.Models.LichPhongVan>;
                    var lich = lichMap != null && lichMap.ContainsKey(Model.MaUngVien) ? lichMap[Model.MaUngVien] : null;
                }

                @if (lich != null)
                {
                    <div class="alert alert-info small">
                        <strong>🗓 Ứng viên đã có lịch:</strong><br />
                        <b>Thời gian:</b> @lich.ThoiGian?.ToString("dd/MM/yyyy HH:mm")<br />
                        <b>Phòng:</b> @lich.PhongPhongVan?.TenPhong - @lich.PhongPhongVan?.DiaDiem<br />
                        <b>Trạng thái:</b> @lich.TrangThai<br />
                        <b>Ghi chú:</b> @lich.GhiChu
                    </div>
                }

                <form asp-controller="LichPhongVans" asp-action="Create" method="post" onsubmit="return !this.classList.contains('blocked')">
                    <input type="hidden" name="UngVienId" value="@Model.MaUngVien" />
                    <input type="hidden" name="ViTriId" value="@Model.ViTriUngTuyenId" />

                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Phòng phỏng vấn</label>
                            <select name="PhongPhongVanId" class="form-select" required>
                                <option value="">-- Chọn phòng --</option>
                                @foreach (var phong in ViewBag.PhongPhongVanList as List<SelectListItem>)
                                {
                                    <option value="@phong.Value">@phong.Text</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-6">
                            <label class="form-label">Thời gian</label>
                            <input name="ThoiGian" type="datetime-local" class="form-control" required />
                        </div>

                        <div class="col-md-12">
                            <label class="form-label">Ghi chú</label>
                            <textarea name="GhiChu" class="form-control" rows="2"></textarea>
                        </div>

                        <div class="col-12 mt-3 text-end">
                            <button type="submit" class="btn btn-success">Lưu lịch</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const lichToanBo = @Html.Raw(JsonConvert.SerializeObject(ViewBag.AllLichPhongVan));

        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll('[id^="modalTaoLich_"]').forEach(modal => {
                const form = modal.querySelector('form');
                const timeInput = form.querySelector('input[name="ThoiGian"]');
                const phongSelect = form.querySelector('select[name="PhongPhongVanId"]');

                function checkClash() {
                    const timeStr = timeInput.value;
                    const phongId = phongSelect.value;
                    form.classList.remove('blocked');

                    if (!timeStr || !phongId) return;

                    const selectedTime = new Date(timeStr);

                    const clash = lichToanBo.some(l => {
                        const time = new Date(l.thoiGian);
                        const diff = Math.abs(time - selectedTime);
                        return l.phongId === phongId && diff < 30 * 60 * 1000; // trong 30 phút
                    });

                    if (clash) {
                        alert("⚠️ Phòng này đã có lịch trùng giờ! Hãy chọn thời gian khác.");
                        form.classList.add('blocked');
                    }
                }

                if (timeInput && phongSelect) {
                    timeInput.addEventListener('change', checkClash);
                    phongSelect.addEventListener('change', checkClash);
                }
            });
        });
    </script>
}