@model IEnumerable<Nhom6_QLHoSoTuyenDung.Models.UngVien>
@using Azure.Core
@using Microsoft.AspNetCore.Mvc.Rendering
@using System.Text.Json


@{
    ViewData["Title"] = "Quản lý Ứng viên";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var nguonLabels = ViewBag.NguonLabels as List<string> ?? new List<string>();
    var nguonValues = ViewBag.NguonValues as List<int> ?? new List<int>();
    var trangThaiLabels = ViewBag.TrangThaiLabels as List<string> ?? new List<string>();
    var trangThaiValues = ViewBag.TrangThaiValues as List<int> ?? new List<int>();
    var viTriLabels = ViewBag.ViTriLabels as List<string> ?? new List<string>();
    var viTriValues = ViewBag.ViTriValues as List<int> ?? new List<int>();
    int totalPages = ViewBag.TotalPages != null ? (int)ViewBag.TotalPages : 1;
}

<style>
    .card {
        border-radius: 8px;
        border: 1px solid #e0e0e0;
        background-color: #fff;
        box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    }

    canvas {
        max-height: 250px;
    }
</style>

<div class="container mt-4">
    <!-- TIÊU ĐỀ -->
    <h2 class="mb-2">Quản lý Ứng viên</h2>

    <!-- NÚt chức năng -->
    <div class="mb-3">
        <button class="btn btn-primary me-2" onclick="toggleForm()">+ Thêm Ứng viên</button>
        <button class="btn btn-outline-primary me-2">📎 Tải CV hàng loạt</button>
        <button class="btn btn-outline-dark">🔍 Lọc nâng cao</button>
    </div>

    <!-- FORM THÊM ỨNG VIÊN -->
    <div id="formContainer" style="display:none;" class="mb-4">
        <form asp-action="Create" enctype="multipart/form-data" method="post">
            <div class="row g-3">
                <div class="col-md-6">
                    <label>Họ tên</label>
                    <input name="HoTen" class="form-control" required />
                </div>
                <div class="col-md-6">
                    <label>Giới tính</label>
                    <select name="GioiTinh" class="form-select">
                        @foreach (var item in (SelectList)ViewBag.GioiTinhList)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
                <div class="col-md-6">
                    <label>Ngày sinh</label>
                    <input type="date" name="NgaySinh" class="form-control" required />
                </div>
                <div class="col-md-6">
                    <label>Email</label>
                    <input type="email" name="Email" class="form-control" required />
                </div>
                <div class="col-md-6">
                    <label>SĐT</label>
                    <input name="SoDienThoai" class="form-control" required />
                </div>
                <div class="col-md-6">
                    <label>Vị trí ứng tuyển</label>
                    <select name="ViTriUngTuyenId" class="form-select" required>
                        @foreach (var item in (SelectList)ViewBag.ViTriList)
                        {
                            <option value="@item.Value">@item.Text</option>
                        }
                    </select>
                </div>
                <div class="col-md-12">
                    <label>Kinh nghiệm</label>
                    <textarea name="KinhNghiem" class="form-control" required></textarea>
                </div>
                <div class="col-md-12">
                    <label>Thành tích</label>
                    <textarea name="ThanhTich" class="form-control" required></textarea>
                </div>
                <div class="col-md-12">
                    <label>Mô tả</label>
                    <textarea name="MoTa" class="form-control" required></textarea>
                </div>
                <div class="col-md-6">
                    <label>Nguồn ứng tuyển</label>
                    <input name="NguonUngTuyen" class="form-control" required />
                </div>
                <div class="col-md-6">
                    <label>Trạng thái</label>
                    <input name="TrangThai" class="form-control" value="Mới" required />
                </div>
                <div class="col-md-12">
                    <label>Tải CV</label>
                    <input type="file" name="CvFile" class="form-control" required />
                </div>
                <div class="col-12 mt-3">
                    <button type="submit" class="btn btn-success">Lưu</button>
                    <button type="button" class="btn btn-secondary" onclick="toggleForm()">Hủy</button>
                </div>
            </div>
        </form>
        <hr />
    </div>
    <!-- THÔNG BÁO -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert" id="successAlert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Đóng"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-warning">
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }
    <!-- FORM LỌC NÂNG CAO -->
    <div id="filterContainer" style="display:none;" class="card card-body mb-4">
        <form method="get">
            <div class="row g-3">
                <div class="col-md-3">
                    <label>Từ khóa (Họ tên)</label>
                    <input type="text" name="Keyword" value="@(Context.Request.Query["Keyword"])" class="form-control" />
                </div>
                <div class="col-md-2">
                    <label>Giới tính</label>
                    <select name="GioiTinh" class="form-select">
                        <option value="">-- Tất cả --</option>
                        @foreach (var item in (SelectList)ViewBag.GioiTinhList)
                        {
                            <option value="@item.Value" selected="@(item.Value.ToString() == Context.Request.Query["GioiTinh"] ? "selected" : null)">
                                @item.Text
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label>Vị trí ứng tuyển</label>
                    <select name="ViTriId" class="form-select">
                        <option value="">-- Tất cả --</option>
                        @foreach (var item in (SelectList)ViewBag.ViTriList)
                        {
                            <option value="@item.Value" selected="@(item.Value.ToString() == Context.Request.Query["ViTriId"] ? "selected" : null)">
                                @item.Text
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label>Trạng thái</label>
                    <input name="TrangThai" value="@(Context.Request.Query["TrangThai"])" class="form-control" />
                </div>
                <div class="col-md-2">
                    <label>Từ ngày</label>
                    <input type="date" name="FromDate" value="@(Context.Request.Query["FromDate"])" class="form-control" />
                </div>
                <div class="col-md-2">
                    <label>Đến ngày</label>
                    <input type="date" name="ToDate" value="@(Context.Request.Query["ToDate"])" class="form-control" />
                </div>
                <div class="col-md-2 align-self-end">
                    <button type="submit" class="btn btn-outline-primary w-100">Áp dụng lọc</button>
                </div>
                <div class="col-md-2 align-self-end">
                    <a href="/UngViens" class="btn btn-secondary w-100">Đặt lại</a>
                </div>
            </div>
        </form>
    </div>



    <!-- THỐNG KÊ -->
    <div class="row mb-4 text-center">
        <div class="col-md-2"><div class="card p-2"><div class="text-muted">Tổng ứng viên</div><h4>@ViewBag.TongUngVien</h4></div></div>
        <div class="col-md-2"><div class="card p-2"><div class="text-muted">Mới tuần này</div><h4>@ViewBag.MoiTuanNay</h4></div></div>
        <div class="col-md-2"><div class="card p-2"><div class="text-muted">Đã phỏng vấn</div><h4>@ViewBag.DaPhongVan</h4></div></div>
        <div class="col-md-2"><div class="card p-2"><div class="text-muted">Đã tuyển</div><h4>@ViewBag.DaTuyen</h4></div></div>
        <div class="col-md-2"><div class="card p-2"><div class="text-muted">Tỷ lệ chuyển đổi</div><h4>@ViewBag.TyLeChuyenDoi %</h4></div></div>
    </div>

    <!-- BIỂU ĐỒ -->
    <div class="row mb-4">
        <div class="col-md-4"><div class="card p-3"><h6 class="text-center">Ứng viên theo nguồn</h6><canvas id="chartNguon"></canvas></div></div>
        <div class="col-md-4"><div class="card p-3"><h6 class="text-center">Ứng viên theo trạng thái</h6><canvas id="chartTrangThai"></canvas></div></div>
        <div class="col-md-4"><div class="card p-3"><h6 class="text-center">Ứng viên theo vị trí</h6><canvas id="chartViTri"></canvas></div></div>
    </div>

    <!-- DANH SÁCH ỨNG VIÊN -->
    @await Html.PartialAsync("_UngVienListPartial", Model)
</div>
<!-- Phân trang -->
<div class="d-flex justify-content-between align-items-center mt-3">
    <div>
        Hiển thị @(ViewBag.PageSize * (ViewBag.CurrentPage - 1) + 1)-@((ViewBag.PageSize * (ViewBag.CurrentPage - 1)) + Model.Count())
        của @ViewBag.TotalItems kết quả
    </div>
    <div>
        <form method="get" class="d-inline">
            <label>Hiển thị:</label>
            <select name="pageSize" onchange="this.form.submit()" class="form-select d-inline w-auto">
                <option value="10" selected="@(ViewBag.PageSize == 10 ? "selected" : null)">10</option>
                <option value="25" selected="@(ViewBag.PageSize == 25 ? "selected" : null)">25</option>
                <option value="50" selected="@(ViewBag.PageSize == 50 ? "selected" : null)">50</option>
                <option value="100" selected="@(ViewBag.PageSize == 100 ? "selected" : null)">100</option>
            </select>
        </form>


        <ul class="pagination d-inline-flex ms-3">
            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="?page=@(ViewBag.CurrentPage - 1)&pageSize=@ViewBag.PageSize">‹</a>
            </li>

            @for (int i = 1; i <= (int)ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="?page=@i&pageSize=@ViewBag.PageSize">@i</a>
                </li>
            }

            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                <a class="page-link" href="?page=@(ViewBag.CurrentPage + 1)&pageSize=@ViewBag.PageSize">›</a>
            </li>
        </ul>
    </div>
</div>
<div class="modal fade" id="cvModal" tabindex="-1" aria-labelledby="cvModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cvModalLabel">Xem CV</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <iframe id="cvViewer" width="100%" height="600px" frameborder="0"></iframe>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function toggleForm() {
            var form = document.getElementById("formContainer");
            form.style.display = form.style.display === "none" ? "block" : "none";
        }

        const dataNguon = {
            labels: @Html.Raw(JsonSerializer.Serialize(ViewBag.NguonLabels)),
            datasets: [{
                data: @Html.Raw(JsonSerializer.Serialize(ViewBag.NguonValues)),
                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#8BC34A', '#9C27B0', '#00BCD4']
            }]
        };

        const dataTrangThai = {
            labels: @Html.Raw(JsonSerializer.Serialize(ViewBag.TrangThaiLabels)),
            datasets: [{
                data: @Html.Raw(JsonSerializer.Serialize(ViewBag.TrangThaiValues)),
                backgroundColor: ['#42A5F5', '#BA68C8', '#FFB74D', '#4DB6AC', '#7986CB', '#EF5350']
            }]
        };

        const dataViTri = {
            labels: @Html.Raw(JsonSerializer.Serialize(ViewBag.ViTriLabels)),
            datasets: [{
                data: @Html.Raw(JsonSerializer.Serialize(ViewBag.ViTriValues)),
                backgroundColor: ['#42A5F5', '#AB47BC', '#FF7043', '#66BB6A', '#29B6F6', '#EF5350']
            }]
        };

        new Chart(document.getElementById('chartNguon'), {
            type: 'doughnut',
            data: dataNguon,
            options: {
                responsive: true,
                plugins: { legend: { display: true } }
            }
        });

        new Chart(document.getElementById('chartTrangThai'), {
            type: 'bar',
            data: dataTrangThai,
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: { y: { beginAtZero: true } }
            }
        });

        new Chart(document.getElementById('chartViTri'), {
            type: 'bar',
            data: dataViTri,
            options: {
                responsive: true,
                plugins: { legend: { display: false } },
                scales: { y: { beginAtZero: true } }
            }
        });

        function xemLichPhongVan(ungVienId) {
            fetch(`/LichPhongVans/ByUngVien?id=${ungVienId}`)
                .then(res => res.text())
                .then(html => {
                    Swal.fire({
                        title: 'Lịch phỏng vấn',
                        html: html,
                        showCloseButton: true,
                        showConfirmButton: false,
                        width: 600
                    });
                });
        }

        function showChiTiet(ungVienId) {
            fetch(`/UngViens/Details?id=${ungVienId}`)
                .then(res => res.text())
                .then(html => {
                    Swal.fire({
                        title: 'Chi tiết ứng viên',
                        html: html,
                        showCloseButton: true,
                        showConfirmButton: false,
                        width: 600
                    });
                });
        }
    </script>
    <script>
        function showCV(url) {
            const viewer = document.getElementById("cvViewer");
            viewer.src = url;
            const modal = new bootstrap.Modal(document.getElementById('cvModal'));
            modal.show();
        }
    </script>
    <script>
        window.addEventListener('DOMContentLoaded', () => {
            const alert = document.getElementById("successAlert");
            if (alert) {
                setTimeout(() => {
                    const bsAlert = bootstrap.Alert.getOrCreateInstance(alert);
                    bsAlert.close();
                }, 3000);
            }

            // ✅ Thêm đoạn toggle lọc nâng cao ở đây
            document.querySelector("button.btn-outline-dark").addEventListener("click", () => {
                const filterBox = document.getElementById("filterContainer");
                filterBox.style.display = filterBox.style.display === "none" ? "block" : "none";
            });

            // ✅ Mở lại form Thêm nếu có lỗi validate
        @if (!ViewData.ModelState.IsValid)
        {
            <text>document.getElementById("formContainer").style.display = "block";</text>
        }
        });
    </script>


}
